parameters:
  - name: ArtifactName
  - name: DevOpsFeedID
  - name: PackageVersion
  - name: IsPrerelease
    type: boolean
    default: true
  - name: PackagePrefix
    default: AzureHealth.DataServices
  - name: RepositoryName
    default: microsoft/azure-health-data-services-sdk


stages:

  - stage: ${{ format('Signing_{0}', parameters.ArtifactName) }}
    displayName: 'Sign Code & Packages'
    dependsOn: Build
    jobs:
      - deployment: SignPackage
        environment: esrp
        pool:
          vmImage: $(VmImage)
        strategy:
          runOnce:
            deploy:
              steps:
              - download: current
                artifact: ${{ parameters.ArtifactName }}
                timeoutInMinutes: 5

              - template: pipelines/steps/package-signing.yml@azure-health-data-services-sdk-build-tools
                parameters:
                  PackagesPath: '$(Pipeline.Workspace)/${{ parameters.ArtifactName }}'

              - publish: '$(Pipeline.Workspace)/${{ parameters.ArtifactName }}-signed'
                artifact: '${{ parameters.ArtifactName }}-signed'
                displayName: 'Store signed packages in ${{ parameters.ArtifactName }}-signed artifact'

  - stage: ${{ format('ReleaseInternal_{0}', parameters.ArtifactName) }}
    ${{ if eq( parameters['IsPrerelease'], true) }}:
      displayName: 'Prerelease Internal Package Publish'
    ${{ else }}:
      displayName: 'Release Internal Package Publish'
    dependsOn: ${{ format('Signing_{0}', parameters.ArtifactName) }}
    jobs:
    - deployment: PublishPackageDevOps
      displayName: 'Publish packages to DevOps Feed'
      environment: nuget-internal
      pool:
        vmImage: $(VmImage)

      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: '${{ parameters.ArtifactName }}-signed'

            - template: pipelines/steps/package-push-internal.yml@azure-health-data-services-sdk-build-tools
              parameters:
                ArtifactPath: '$(Pipeline.Workspace)/${{ parameters.ArtifactName }}-signed'
                PackageName: ${{ parameters.PackagePrefix }}
                DevOpsFeedID: ${{ parameters.DevOpsFeedID }}

  # Add integration tests here

  - stage: ${{ format('ReleaseGithubNuget_{0}', parameters.ArtifactName) }}
    ${{ if eq( parameters['IsPrerelease'], true) }}:
      displayName: 'GitHub/Nuget Pre-Release Publish'
    ${{ else }}:
      displayName: 'GitHub/Nuget Release Publish'
    dependsOn: ${{ format('ReleaseInternal_{0}', parameters.ArtifactName) }}
    jobs:
    - deployment: PublishPackageNuGet
      ${{ if eq( parameters['IsPrerelease'], true) }}:
        displayName: 'Publish Nuget Prerelease'
      ${{ else }}:
        displayName: 'Publish NuGet Release'
      environment: nuget
      pool:
        vmImage: $(VmImage)

      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: '${{ parameters.ArtifactName }}-signed'

            - template: pipelines/steps/package-push-nuget.yml@azure-health-data-services-sdk-build-tools
              parameters:
                ArtifactPath: '$(Pipeline.Workspace)/${{ parameters.ArtifactName }}-signed'
                PackageName: ${{ parameters.PackagePrefix }}

    - deployment: GithubRelease
      ${{ if eq( parameters['IsPrerelease'], true) }}:
        displayName: 'Create GitHub Release (Prerelease)'
      ${{ else }}:
        displayName: 'Create GitHub Release (Release)'
      dependsOn: 'PublishPackageNuGet'
      environment: github
      pool:
        vmImage: $(VmImage)
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: '${{ parameters.ArtifactName }}-signed'

            - task: GithubRelease@1 
              displayName: 'Create GitHub Release'
              inputs:
                gitHubConnection: 'Github (${{ parameters.RepositoryName }})'
                repositoryName: ${{ parameters.RepositoryName }}
                action: 'create'
                tagSource: userSpecifiedTag
                tag: release/${{ parameters.PackageVersion }}
                title: ${{ parameters.PackagePrefix }} ${{ parameters.PackageVersion }}
                isPreRelease: ${{ parameters.IsPrerelease }}
                assets: |
                  $(Pipeline.Workspace)/${{ parameters.ArtifactName }}-signed/*.nupkg
                  $(Pipeline.Workspace)/${{ parameters.ArtifactName }}-signed/*.snupkg
